---
- name: Instalar y configurar Nginx
  hosts: nginx
  become: true
  tasks:
    - name: Actualizar cache de paquetes
      apt:
        update_cache: yes

    - name: Instalar Nginx
      apt:
        name: nginx
        state: present

    - name: Iniciar servicio Nginx
      systemd:
        name: nginx
        state: started
        enabled: yes

    - name: Cambiar propietario de /var/www/html
      file:
        path: /var/www/html
        owner: "{{ ansible_user }}"
        group: "{{ ansible_user }}"
        recurse: yes

    - name: Copiar aplicación web del Teclado
      copy:
        src: "../Teclado/"
        dest: "/var/www/html/"
        owner: "{{ ansible_user }}"
        group: "{{ ansible_user }}"
        mode: '0644'
        directory_mode: '0755'

- name: Instalación de Docker y Docker Compose en Ubuntu
  hosts: jenkins
  become: true
  
  tasks:
    # Actualizar el cache de paquetes
    - name: Actualizar el cache de paquetes
      apt:
        update_cache: yes

    # Instalar dependencias para Docker
    - name: Instalar dependencias para Docker
      apt:
        name: 
          - apt-transport-https
          - ca-certificates
          - curl
          - gnupg-agent
          - software-properties-common

    # Agregar la clave GPG oficial de Docker
    - name: Agregar la clave GPG oficial de Docker
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present

    # Agregar el repositorio de Docker al sources.list.d
    - name: Agregar el repositorio de Docker al sources.list.d
      apt_repository:
        repo: deb [arch=amd64] https://download.docker.com/linux/ubuntu {{ ansible_lsb.codename }} stable
        state: present

    # Actualizar el cache de paquetes de nuevo (para que encuentre el paquete de Docker)
    - name: Actualizar el cache de paquetes de nuevo (para que encuentre el paquete de Docker)
      apt:
        update_cache: yes

    # Instalar Docker
    - name: Instalar Docker
      apt:
        name: docker-ce
        state: present

    # Añadir el usuario actual al grupo de Docker
    - name: Añadir el usuario actual al grupo de Docker
      user:
        name: "{{ ansible_user }}"
        groups: docker
        append: yes

    # Instalar Docker Compose
    - name: Instalar Docker Compose
      shell: |
        curl -L "https://github.com/docker/compose/releases/download/1.29.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
        chmod +x /usr/local/bin/docker-compose
      args:
        creates: /usr/local/bin/docker-compose
    
    - name: Establecer vm.max_map_count en el kernel
      sysctl:
        name: vm.max_map_count
        value: "262144"
        state: present
        reload: yes
    
    - name: Copiar archivo de configuración de Nginx
      copy:
        src: docker-compose.yml
        dest: /home/{{ ansible_user }}/docker-compose.yml

    # Reiniciar servicio Docker para aplicar cambios de grupo
    - name: Reiniciar Docker para aplicar cambios de grupo
      systemd:
        name: docker
        state: restarted

    # Verificar que Docker esté funcionando
    - name: Verificar que Docker daemon esté activo
      command: sudo docker info
      retries: 3
      delay: 10
      register: docker_info
      until: docker_info.rc == 0

    # Ejecutar docker-compose con sudo para evitar problemas de permisos
    - name: Ejecutar docker-compose.yml con sudo
      shell: |
        cd /home/{{ ansible_user }}
        sudo docker-compose up -d
      args:
        chdir: /home/{{ ansible_user }}/

    # Verificar que los contenedores estén creados
    - name: Verificar estado de contenedores Docker
      shell: sudo docker ps --format "table {{ '{{' }}.Names{{ '}}' }}\t{{ '{{' }}.Status{{ '}}' }}\t{{ '{{' }}.Ports{{ '}}' }}"
      register: containers_status

    - name: Mostrar estado de contenedores
      debug:
        msg: "{{ containers_status.stdout_lines }}"

    # Esperar de manera más robusta a que los servicios estén listos
    - name: Esperar a que Jenkins responda (puede tardar varios minutos)
      uri:
        url: "http://{{ ansible_default_ipv4.address }}:80"
        method: GET
        status_code: [200, 403, 503]  # Jenkins puede devolver 403 o 503 mientras se inicializa
      register: jenkins_response
      until: jenkins_response.status in [200, 403]
      retries: 20
      delay: 30
      ignore_errors: yes

    - name: Esperar a que SonarQube responda
      uri:
        url: "http://{{ ansible_default_ipv4.address }}:9000"
        method: GET
        status_code: [200, 503]  # SonarQube puede devolver 503 mientras se inicializa
      register: sonar_response
      until: sonar_response.status == 200
      retries: 15
      delay: 30
      ignore_errors: yes